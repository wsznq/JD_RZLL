{"remainingRequest":"F:\\code\\front\\入职履历vue\\node_modules\\thread-loader\\dist\\cjs.js!F:\\code\\front\\入职履历vue\\node_modules\\babel-loader\\lib\\index.js!F:\\code\\front\\入职履历vue\\src\\config\\axios.js","dependencies":[{"path":"F:\\code\\front\\入职履历vue\\src\\config\\axios.js","mtime":1569028503200},{"path":"F:\\code\\front\\入职履历vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\front\\入职履历vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\front\\入职履历vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\code\\\\front\\\\\\u5165\\u804C\\u5C65\\u5386vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n// import vue from 'vue'\nimport axios from \"../config/http\";\nimport $ from \"jquery\";\nimport vue from \"vue\";\nimport Qs from \"qs\";\nexport default\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\nregeneratorRuntime.mark(function _callee() {\n  var url,\n      data,\n      type,\n      _args = arguments;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = _args.length > 0 && _args[0] !== undefined ? _args[0] : \"\";\n          data = _args.length > 1 ? _args[1] : undefined;\n          type = _args.length > 2 ? _args[2] : undefined;\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            var form;\n            console.log(data); // if (isEncrypt) {\n            // \tform.data = Encrypt(data.data)\n            // } else {\n            // \tform = data.data\n            // }\n\n            if (!window.sessionStorage.getItem(\"isfirst\")) {// axios.defaults.headers.APPID = 'jiedian'\n              // axios.defaults.headers.APPKey = '70A62C9BFEB46644B2A37338E4FD8143'\n              // axios.get('http://220.189.245.171:8056/SAPForAPPServer.asmx/OpenServer', {}).then((res) => {\n              // \tconsole.log(axios.defaults.headers)\n              // \twindow.sessionStorage.setItem('isfirst', '1')\n              // })\n              // window.location.reload()\n            }\n\n            axios.post(url, Qs.stringify(data)).then(function (res) {\n              res = $.parseXML(res.data).firstChild.textContent;\n              res = decodeURIComponent(res);\n              res = JSON.parse(res);\n\n              if (res.ReturnType === \"success\") {\n                // console.log(res.ReturnMsg)\n                if (type === \"parse\") {\n                  resolve(JSON.parse(res.ReturnMsg));\n                }\n\n                if (type === \"UrlDecode\") {\n                  resolve(UrlDecode(res.ReturnMsg));\n                } else {\n                  resolve(res.ReturnMsg);\n                }\n              } else if (res.words_result) {\n                resolve(res);\n              } else {\n                console.log(url, data.data, res);\n\n                if (type === \"UrlDecode\") {\n                  vue.$vux.toast.text(UrlDecode(res.ReturnMsg)); // vue.$store.commit(\"updateLoadingStatus\", { isLoading: false });\n                  // console.log(vue.$store)\n\n                  reject(UrlDecode(res.ReturnMsg));\n                } else {\n                  vue.$vux.toast.text(res.ReturnMsg); // vue.$store.commit(\"updateLoadingStatus\", { isLoading: false });\n                  // console.log(vue.$store)\n\n                  reject(res.ReturnMsg);\n                }\n              }\n            });\n          }));\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\n\nfunction UrlDecode(str) {\n  var ret = \"\";\n\n  for (var i = 0; i < str.length; i++) {\n    var chr = str.charAt(i);\n\n    if (chr == \"+\") {\n      ret += \" \";\n    } else if (chr == \"%\") {\n      var asc = str.substring(i + 1, i + 3);\n\n      if (parseInt(\"0x\" + asc) > 0x7f) {\n        ret += asc2str(parseInt(\"0x\" + asc + str.substring(i + 4, i + 6)));\n        i += 5;\n      } else {\n        ret += asc2str(parseInt(\"0x\" + asc));\n        i += 2;\n      }\n    } else {\n      ret += chr;\n    }\n  }\n\n  return ret;\n}",null]}