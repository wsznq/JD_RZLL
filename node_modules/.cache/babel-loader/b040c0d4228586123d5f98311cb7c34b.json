{"remainingRequest":"F:\\code\\front\\入职履历vue\\node_modules\\thread-loader\\dist\\cjs.js!F:\\code\\front\\入职履历vue\\node_modules\\babel-loader\\lib\\index.js!F:\\code\\front\\入职履历vue\\src\\utils\\common.js","dependencies":[{"path":"F:\\code\\front\\入职履历vue\\src\\utils\\common.js","mtime":1575429284133},{"path":"F:\\code\\front\\入职履历vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\front\\入职履历vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\front\\入职履历vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.match\";\n\n/* eslint-disable no-console */\n// import cookie from 'js-cookie'\n\n/**\r\n * 2019/06/18 by huangtianhan\r\n */\nimport Exif from \"exif-js\";\nexport default {\n  install: function install(Vue) {\n    Vue.prototype.saveSession = function (name, content) {\n      window.sessionStorage.setItem(name, JSON.stringify(content));\n    }, Vue.prototype.getSession = function (name) {\n      return JSON.parse(window.sessionStorage.getItem(name));\n    }, Vue.prototype.uploadImgToBase64 = function (file) {\n      return new Promise(function (resolve, reject) {\n        var Orientation; //去获取拍照时的信息，解决拍出来的照片旋转问题\n\n        Exif.getData(file, function () {\n          Orientation = Exif.getTag(this, \"Orientation\");\n        });\n        var reader = new FileReader();\n        console.info(\"文件大小：\" + file.size / 1024 / 1024);\n\n        if (file.size / 1024 / 1024 > 10) {\n          console.info(\"文件大于10M\");\n          return;\n        }\n\n        reader.readAsDataURL(file);\n\n        reader.onload = function (e) {\n          var image = new Image(); //新建一个img标签（还没嵌入DOM节点)\n\n          image.src = e.target.result;\n          var base64 = \"\"; //var base64_ios = \"\";\n\n          var quality = 1;\n\n          image.onload = function () {\n            var canvas = document.createElement(\"canvas\"),\n                context = canvas.getContext(\"2d\"),\n                imageWidth = image.width,\n                //压缩前图片的大小\n            imageHeight = image.height;\n            var maxWidth = 800;\n            var maxHeight = 800;\n\n            if (imageWidth > maxWidth || imageHeight > maxHeight) {\n              if (imageWidth / imageHeight > maxWidth / maxHeight) {\n                // 更宽，按照宽度限定尺寸\n                canvas.width = maxWidth;\n                canvas.height = Math.round(maxWidth * imageHeight / imageWidth);\n              } else {\n                canvas.height = maxHeight;\n                canvas.width = Math.round(maxHeight * imageWidth / imageHeight);\n              }\n            } else {\n              canvas.height = imageHeight;\n              canvas.width = imageWidth;\n            }\n\n            console.info(\"宽和高：\" + canvas.width, canvas.height);\n            console.info(\"方向：\" + Orientation);\n            console.info(\"手机类型：\" + navigator.userAgent);\n\n            if (navigator.userAgent.match(/iPhone/i)) {\n              if (Orientation != \"\" && Orientation != 1) {\n                //base64_ios = canvas.toDataURL(\"image/jpeg\", quality);\n                switch (Orientation) {\n                  case 6:\n                    //需要顺时针（向左）90度旋转\n                    rotateImg(image, \"left\", canvas);\n                    break;\n\n                  case 8:\n                    //需要逆时针（向右）90度旋转\n                    rotateImg(image, \"right\", canvas);\n                    break;\n\n                  case 3:\n                    //需要180度旋转\n                    rotateImg(image, \"right\", canvas); //转两次\n\n                    rotateImg(image, \"right\", canvas);\n                    break;\n                }\n              } else {\n                context.drawImage(image, 0, 0, canvas.width, canvas.height);\n              }\n            } else {\n              context.drawImage(image, 0, 0, canvas.width, canvas.height);\n            }\n\n            base64 = canvas.toDataURL(\"image/jpeg\", quality);\n            var strLength = base64.length;\n            var fileLength = parseInt(strLength - strLength / 8 * 2); // 由字节转换为KB\n\n            var size = \"\";\n            size = (fileLength / 1024).toFixed(2);\n\n            while (parseInt(size) > 1000) {\n              quality = 0.9 * quality;\n              base64 = canvas.toDataURL(\"image/jpeg\", quality);\n              strLength = base64.length;\n              fileLength = parseInt(strLength - strLength / 8 * 2);\n              size = (fileLength / 1024).toFixed(2);\n            }\n\n            console.info(size + \"kb\");\n            resolve(base64); //return data;\n          }; // 图片转base64完成后返回reader对象\n          //resolve(data);\n\n        };\n\n        reader.onerror = reject;\n      });\n    }, Vue.prototype.getFileUrl = function (obj) {\n      var url;\n      url = window.URL.createObjectURL(obj.files.item(0));\n      return url;\n    };\n  }\n};\n\nfunction rotateImg(img, direction, canvas) {\n  //最小与最大旋转方向，图片旋转4次后回到原方向\n  var min_step = 0;\n  var max_step = 3;\n  if (img == null) return; //img的高度和宽度不能在img元素隐藏后获取，否则会出错\n\n  var height = img.height;\n  var width = img.width;\n  var step = 2;\n\n  if (step == null) {\n    step = min_step;\n  }\n\n  if (direction == \"right\") {\n    step++; //旋转到原位置，即超过最大值\n\n    step > max_step && (step = min_step);\n  } else {\n    step--;\n    step < min_step && (step = max_step);\n  } //旋转角度以弧度值为参数\n\n\n  var degree = step * 90 * Math.PI / 180;\n  var ctx = canvas.getContext(\"2d\");\n  console.info(\"步数\" + step);\n\n  switch (step) {\n    case 0:\n      canvas.width = width;\n      canvas.height = height;\n      ctx.drawImage(img, 0, 0);\n      break;\n\n    case 1:\n      canvas.width = height;\n      canvas.height = width;\n      ctx.rotate(degree);\n      ctx.drawImage(img, 0, -height);\n      break;\n\n    case 2:\n      canvas.width = width;\n      canvas.height = height;\n      ctx.rotate(degree);\n      ctx.drawImage(img, -width, -height);\n      break;\n\n    case 3:\n      canvas.width = height;\n      canvas.height = width;\n      ctx.rotate(degree);\n      ctx.drawImage(img, -width, 0);\n      break;\n  }\n}",null]}