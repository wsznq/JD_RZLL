{"remainingRequest":"F:\\code\\front\\入职履历vue\\node_modules\\babel-loader\\lib\\index.js!F:\\code\\front\\入职履历vue\\src\\utils\\common.js","dependencies":[{"path":"F:\\code\\front\\入职履历vue\\src\\utils\\common.js","mtime":1575429284133},{"path":"F:\\code\\front\\入职履历vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\front\\入职履历vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.match\";\n\n/* eslint-disable no-console */\n// import cookie from 'js-cookie'\n\n/**\r\n * 2019/06/18 by huangtianhan\r\n */\nimport Exif from \"exif-js\";\nexport default {\n  install: function install(Vue) {\n    Vue.prototype.saveSession = function (name, content) {\n      window.sessionStorage.setItem(name, JSON.stringify(content));\n    }, Vue.prototype.getSession = function (name) {\n      return JSON.parse(window.sessionStorage.getItem(name));\n    }, Vue.prototype.uploadImgToBase64 = function (file) {\n      return new Promise(function (resolve, reject) {\n        var Orientation; //去获取拍照时的信息，解决拍出来的照片旋转问题\n\n        Exif.getData(file, function () {\n          Orientation = Exif.getTag(this, \"Orientation\");\n        });\n        var reader = new FileReader();\n        console.info(\"文件大小：\" + file.size / 1024 / 1024);\n\n        if (file.size / 1024 / 1024 > 10) {\n          console.info(\"文件大于10M\");\n          return;\n        }\n\n        reader.readAsDataURL(file);\n\n        reader.onload = function (e) {\n          var image = new Image(); //新建一个img标签（还没嵌入DOM节点)\n\n          image.src = e.target.result;\n          var base64 = \"\"; //var base64_ios = \"\";\n\n          var quality = 1;\n\n          image.onload = function () {\n            var canvas = document.createElement(\"canvas\"),\n                context = canvas.getContext(\"2d\"),\n                imageWidth = image.width,\n                //压缩前图片的大小\n            imageHeight = image.height;\n            var maxWidth = 800;\n            var maxHeight = 800;\n\n            if (imageWidth > maxWidth || imageHeight > maxHeight) {\n              if (imageWidth / imageHeight > maxWidth / maxHeight) {\n                // 更宽，按照宽度限定尺寸\n                canvas.width = maxWidth;\n                canvas.height = Math.round(maxWidth * imageHeight / imageWidth);\n              } else {\n                canvas.height = maxHeight;\n                canvas.width = Math.round(maxHeight * imageWidth / imageHeight);\n              }\n            } else {\n              canvas.height = imageHeight;\n              canvas.width = imageWidth;\n            }\n\n            console.info(\"宽和高：\" + canvas.width, canvas.height);\n            console.info(\"方向：\" + Orientation);\n            console.info(\"手机类型：\" + navigator.userAgent);\n\n            if (navigator.userAgent.match(/iPhone/i)) {\n              if (Orientation != \"\" && Orientation != 1) {\n                //base64_ios = canvas.toDataURL(\"image/jpeg\", quality);\n                switch (Orientation) {\n                  case 6:\n                    //需要顺时针（向左）90度旋转\n                    rotateImg(image, \"left\", canvas);\n                    break;\n\n                  case 8:\n                    //需要逆时针（向右）90度旋转\n                    rotateImg(image, \"right\", canvas);\n                    break;\n\n                  case 3:\n                    //需要180度旋转\n                    rotateImg(image, \"right\", canvas); //转两次\n\n                    rotateImg(image, \"right\", canvas);\n                    break;\n                }\n              } else {\n                context.drawImage(image, 0, 0, canvas.width, canvas.height);\n              }\n            } else {\n              context.drawImage(image, 0, 0, canvas.width, canvas.height);\n            }\n\n            base64 = canvas.toDataURL(\"image/jpeg\", quality);\n            var strLength = base64.length;\n            var fileLength = parseInt(strLength - strLength / 8 * 2); // 由字节转换为KB\n\n            var size = \"\";\n            size = (fileLength / 1024).toFixed(2);\n\n            while (parseInt(size) > 1000) {\n              quality = 0.9 * quality;\n              base64 = canvas.toDataURL(\"image/jpeg\", quality);\n              strLength = base64.length;\n              fileLength = parseInt(strLength - strLength / 8 * 2);\n              size = (fileLength / 1024).toFixed(2);\n            }\n\n            console.info(size + \"kb\");\n            resolve(base64); //return data;\n          }; // 图片转base64完成后返回reader对象\n          //resolve(data);\n\n        };\n\n        reader.onerror = reject;\n      });\n    }, Vue.prototype.getFileUrl = function (obj) {\n      var url;\n      url = window.URL.createObjectURL(obj.files.item(0));\n      return url;\n    };\n  }\n};\n\nfunction rotateImg(img, direction, canvas) {\n  //最小与最大旋转方向，图片旋转4次后回到原方向\n  var min_step = 0;\n  var max_step = 3;\n  if (img == null) return; //img的高度和宽度不能在img元素隐藏后获取，否则会出错\n\n  var height = img.height;\n  var width = img.width;\n  var step = 2;\n\n  if (step == null) {\n    step = min_step;\n  }\n\n  if (direction == \"right\") {\n    step++; //旋转到原位置，即超过最大值\n\n    step > max_step && (step = min_step);\n  } else {\n    step--;\n    step < min_step && (step = max_step);\n  } //旋转角度以弧度值为参数\n\n\n  var degree = step * 90 * Math.PI / 180;\n  var ctx = canvas.getContext(\"2d\");\n  console.info(\"步数\" + step);\n\n  switch (step) {\n    case 0:\n      canvas.width = width;\n      canvas.height = height;\n      ctx.drawImage(img, 0, 0);\n      break;\n\n    case 1:\n      canvas.width = height;\n      canvas.height = width;\n      ctx.rotate(degree);\n      ctx.drawImage(img, 0, -height);\n      break;\n\n    case 2:\n      canvas.width = width;\n      canvas.height = height;\n      ctx.rotate(degree);\n      ctx.drawImage(img, -width, -height);\n      break;\n\n    case 3:\n      canvas.width = height;\n      canvas.height = width;\n      ctx.rotate(degree);\n      ctx.drawImage(img, -width, 0);\n      break;\n  }\n}",{"version":3,"sources":["F:\\code\\front\\入职履历vue\\src\\utils\\common.js"],"names":["Exif","install","Vue","prototype","saveSession","name","content","window","sessionStorage","setItem","JSON","stringify","getSession","parse","getItem","uploadImgToBase64","file","Promise","resolve","reject","Orientation","getData","getTag","reader","FileReader","console","info","size","readAsDataURL","onload","e","image","Image","src","target","result","base64","quality","canvas","document","createElement","context","getContext","imageWidth","width","imageHeight","height","maxWidth","maxHeight","Math","round","navigator","userAgent","match","rotateImg","drawImage","toDataURL","strLength","length","fileLength","parseInt","toFixed","onerror","getFileUrl","obj","url","URL","createObjectURL","files","item","img","direction","min_step","max_step","step","degree","PI","ctx","rotate"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\r\n// import cookie from 'js-cookie'\r\n/**\r\n * 2019/06/18 by huangtianhan\r\n */\r\nimport Exif from \"exif-js\";\r\nexport default {\r\n  install(Vue) {\r\n    (Vue.prototype.saveSession = (name, content) => {\r\n      window.sessionStorage.setItem(name, JSON.stringify(content));\r\n    }),\r\n      (Vue.prototype.getSession = name => {\r\n        return JSON.parse(window.sessionStorage.getItem(name));\r\n      }),\r\n      (Vue.prototype.uploadImgToBase64 = file => {\r\n        return new Promise((resolve, reject) => {\r\n          let Orientation; //去获取拍照时的信息，解决拍出来的照片旋转问题\r\n          Exif.getData(file, function() {\r\n            Orientation = Exif.getTag(this, \"Orientation\");\r\n          });\r\n          const reader = new FileReader();\r\n          console.info(\"文件大小：\" + file.size / 1024 / 1024);\r\n          if (file.size / 1024 / 1024 > 10) {\r\n            console.info(\"文件大于10M\");\r\n            return;\r\n          }\r\n          reader.readAsDataURL(file);\r\n          reader.onload = function(e) {\r\n            let image = new Image(); //新建一个img标签（还没嵌入DOM节点)\r\n            image.src = e.target.result;\r\n            var base64 = \"\";\r\n            //var base64_ios = \"\";\r\n            var quality = 1;\r\n            image.onload = function() {\r\n              let canvas = document.createElement(\"canvas\"),\r\n                context = canvas.getContext(\"2d\"),\r\n                imageWidth = image.width, //压缩前图片的大小\r\n                imageHeight = image.height;\r\n              var maxWidth = 800;\r\n              var maxHeight = 800;\r\n              if (imageWidth > maxWidth || imageHeight > maxHeight) {\r\n                if (imageWidth / imageHeight > maxWidth / maxHeight) {\r\n                  // 更宽，按照宽度限定尺寸\r\n                  canvas.width = maxWidth;\r\n                  canvas.height = Math.round(\r\n                    (maxWidth * imageHeight) / imageWidth\r\n                  );\r\n                } else {\r\n                  canvas.height = maxHeight;\r\n                  canvas.width = Math.round(\r\n                    (maxHeight * imageWidth) / imageHeight\r\n                  );\r\n                }\r\n              } else {\r\n                canvas.height = imageHeight;\r\n                canvas.width = imageWidth;\r\n              }\r\n              console.info(\"宽和高：\" + canvas.width, canvas.height);\r\n              console.info(\"方向：\" + Orientation);\r\n              console.info(\"手机类型：\" + navigator.userAgent);\r\n              if (navigator.userAgent.match(/iPhone/i)) {\r\n                if (Orientation != \"\" && Orientation != 1) {\r\n                  //base64_ios = canvas.toDataURL(\"image/jpeg\", quality);\r\n                  switch (Orientation) {\r\n                    case 6: //需要顺时针（向左）90度旋转\r\n                      rotateImg(image, \"left\", canvas);\r\n                      break;\r\n                    case 8: //需要逆时针（向右）90度旋转\r\n                      rotateImg(image, \"right\", canvas);\r\n                      break;\r\n                    case 3: //需要180度旋转\r\n                      rotateImg(image, \"right\", canvas); //转两次\r\n                      rotateImg(image, \"right\", canvas);\r\n                      break;\r\n                  }\r\n                } else {\r\n                  context.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                }\r\n              } else {\r\n                context.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n              }\r\n              base64 = canvas.toDataURL(\"image/jpeg\", quality);\r\n              var strLength = base64.length;\r\n              var fileLength = parseInt(strLength - (strLength / 8) * 2);\r\n\r\n              // 由字节转换为KB\r\n              var size = \"\";\r\n              size = (fileLength / 1024).toFixed(2);\r\n              while (parseInt(size) > 1000) {\r\n                quality = 0.9 * quality;\r\n                base64 = canvas.toDataURL(\"image/jpeg\", quality);\r\n                strLength = base64.length;\r\n                fileLength = parseInt(strLength - (strLength / 8) * 2);\r\n\r\n                size = (fileLength / 1024).toFixed(2);\r\n              }\r\n              console.info(size + \"kb\");\r\n              resolve(base64);\r\n              //return data;\r\n            };\r\n            // 图片转base64完成后返回reader对象\r\n            //resolve(data);\r\n          };\r\n          reader.onerror = reject;\r\n        });\r\n      }),\r\n      (Vue.prototype.getFileUrl = obj => {\r\n        let url;\r\n        url = window.URL.createObjectURL(obj.files.item(0));\r\n        return url;\r\n      });\r\n  }\r\n};\r\nfunction rotateImg(img, direction, canvas) {\r\n  //最小与最大旋转方向，图片旋转4次后回到原方向\r\n  const min_step = 0;\r\n  const max_step = 3;\r\n  if (img == null) return;\r\n  //img的高度和宽度不能在img元素隐藏后获取，否则会出错\r\n  let height = img.height;\r\n  let width = img.width;\r\n  let step = 2;\r\n  if (step == null) {\r\n    step = min_step;\r\n  }\r\n  if (direction == \"right\") {\r\n    step++;\r\n    //旋转到原位置，即超过最大值\r\n    step > max_step && (step = min_step);\r\n  } else {\r\n    step--;\r\n    step < min_step && (step = max_step);\r\n  }\r\n  //旋转角度以弧度值为参数\r\n  let degree = (step * 90 * Math.PI) / 180;\r\n  let ctx = canvas.getContext(\"2d\");\r\n  console.info(\"步数\" + step);\r\n  switch (step) {\r\n    case 0:\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      ctx.drawImage(img, 0, 0);\r\n      break;\r\n    case 1:\r\n      canvas.width = height;\r\n      canvas.height = width;\r\n      ctx.rotate(degree);\r\n      ctx.drawImage(img, 0, -height);\r\n      break;\r\n    case 2:\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      ctx.rotate(degree);\r\n      ctx.drawImage(img, -width, -height);\r\n      break;\r\n    case 3:\r\n      canvas.width = height;\r\n      canvas.height = width;\r\n      ctx.rotate(degree);\r\n      ctx.drawImage(img, -width, 0);\r\n      break;\r\n  }\r\n}\r\n"]}]}